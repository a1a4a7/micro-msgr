version: '3.9'

services:
  zookeeper:
    image: zookeeper:3.6
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - sukuna_network

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - sukuna_network

  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - sukuna_network

  eurekaserv:
    image: eurekaserv:latest
    container_name: eurekaserv
    build:
      context: ./eurekaserv
    ports:
      - "8761:8761"
    networks:
      - sukuna_network

  msgserv:
    image: msgserv:latest
    container_name: msgserv
    build:
      context: ./msgserv
    ports:
      - "8081:8081"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eurekaserv:8761/eureka/
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - eurekaserv
      - kafka
      - redis
    networks:
      - sukuna_network

  sessionserv:
    image: sessionserv:latest
    container_name: sessionserv
    build:
      context: ./sessionserv
    ports:
      - "8082:8082"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eurekaserv:8761/eureka/
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
    depends_on:
      - eurekaserv
      - redis
    networks:
      - sukuna_network

networks:
  sukuna_network:
    name: sukuna_network
    driver: bridge

volumes:
  redis-data:
